plot(dnorm,
xlim = c(-5, 5),
ylab = "probability density")
dnorm.log <- function(theta) {
return(dnorm(x = theta, mean = 0, sd = 1, log = TRUE))
}
starting.value <- 1 # starting value for MCMC
sigma <- 1 # standard deviation of MCMC
iter <- 1000
trace <- my_mcmcMH(target = dnorm.log, init.theta = starting.value,
proposal.sd = sigma, n.iterations = iter)
plot(trace, type = "l")
?my_logPosterior
??my_logPosterior
my_logPosterior
my_logPosterior_epi1 <- function(theta) {
return(my_logPosterior(fitmodel = SIR,
theta = theta,
init.state = c(S = 999, I = 1, R = 0),
data = epi1))
}
my_logPosterior_epi1(c(R0 = 3, D.inf = 2))
mcmc.epi3 <- mcmcMH(target = my_logPosterior_epi3,
init.theta = c(R0 = 1, D.inf = 2),
proposal.sd = c(0.01, 0.1),
n.iterations = 1000)
rejectionRate(mcmc.trace)
mcmc.trace <- mcmc(trace)
rejectionRate(mcmc.trace)
effectiveSize(mcmc.trace)
mcmc.trace.burned <- burnAndThin(mcmc.trace, burn = 1000)
plot(mcmc.trace.burned)
data(mcmc)
trace <- mcmc.epi3$trace
head(trace)
mcmc.trace <- mcmc(trace)
rejectionRate(mcmc.trace)
effectiveSize(mcmc.trace)
mcmc.trace.burned <- burnAndThin(mcmc.trace, burn = 1000)
plot(mcmc.trace.burned)
source('~/Documents/My Documents/Diagnostics/Natural history/genfun/data/distributions_data.R', echo=TRUE)
g<-read.csv("dist_gagn2006.csv")
head(g)
dim(g)
g[9,]
g[1,]
g<-read.csv("dist_gagn2006.csv"); d<-c()
for (i in 1:dim(g)[1]){
d<-c(d,matrix(1,1,g[i,2])*g[i,1])
}
d
length(d)
length(which(d=="0.82"))
h <- hist(d, breaks = seq(0,1,0.01))
plottitle("d")
title("d")
h <- hist(d, breaks = seq(0,1,0.01),title="rpoB mutants (Gagneux, 2006)")
h <- hist(d, breaks = seq(0,1,0.01),main="rpoB mutants (Gagneux, 2006)")
h <- hist(d, breaks = seq(0,1,0.01),main="rpoB mutants (Gagneux, 2006)")
h <- hist(d, breaks = seq(0,1,0.01),main="rpoB mutants (Gagneux, 2006)",xlab = "Relative fitness")
setwd(plots)
setwd(plots)
plots<-paste(home,"plots",sep="")
setwd(plots)
plots
plots<-paste(home,"/plots",sep="")
setwd(plots)
dev.off()
pdf("data_gagn2006.pdf")
h <- hist(d, breaks = seq(0,1,0.01),main="rpoB mutants (Gagneux, 2006)",xlab = "Relative fitness")
dev.off()
g<-read.csv("dist_gagn2006t85.csv"); d<-c()
setwd(home)
g<-read.csv("dist_gagn2006t85.csv"); d<-c()
for (i in 1:dim(g)[1]){
d<-c(d,matrix(1,1,g[i,2])*g[i,1])
}
dim(g)
g<-read.csv("dist_gagn2006t85.csv"); d<-c()
dim(g)
g
g<-read.csv("dist_gagn2006t85.csv")[1:4,]; d<-c()
g
g<-read.csv("dist_gagn2006t85.csv")[1:4,]; d<-c()
for (i in 1:dim(g)[1]){
d<-c(d,matrix(1,1,g[i,2])*g[i,1])
}
setwd(plots)
pdf("data_gagn2006t85.pdf")
h <- hist(d, breaks = seq(0,1,0.01),main="rpoB mutants, CDC1551 (Gagneux, 2006)",xlab = "Relative fitness (independent growth)")
dev.off()
source('~/Documents/My Documents/Diagnostics/Natural history/genfun/data/distributions_data.R', echo=TRUE)
plot( h, col=rgb(0,0,1,1/4), xlim=c(0,1))  # first histogram
plot( h1, col=rgb(1,0,0,1/4), xlim=c(0,1), add=T)  # second
h1
g1
g1<-read.csv("dist_gagn2006t85.csv")[1:4,]; d<-c()
setwd(home)
g1<-read.csv("dist_gagn2006t85.csv")[1:4,]; d<-c()
g1
d1
dim(g1)[1]
g1<-read.csv("dist_gagn2006t85.csv")[1:4,]; d<-c()
for (i in 1:dim(g1)[1]){d1<-c(d1,matrix(1,1,g1[i,2])*g1[i,1])}
h1 <- hist(d1, breaks = seq(0,1,0.01),main="rpoB mutants, CDC1551 (Gagneux, 2006)",xlab = "Relative fitness (independent growth)")
setwd(plots)
pdf("data_gagn2006t85.pdf")
h1 <- hist(d1, breaks = seq(0,1,0.01),main="rpoB mutants, CDC1551 (Gagneux, 2006)",xlab = "Relative fitness (independent growth)")
dev.off()
plot( h, col=rgb(0,0,1,1/4), xlim=c(0,1))  # first histogram
plot( h1, col=rgb(1,0,0,1/4), xlim=c(0,1), add=T)  # second
g1
h1 <- hist(d1, breaks = seq(0,1,0.01),ylim=c(0,25),main="rpoB mutants, CDC1551 (Gagneux, 2006)",xlab = "Relative fitness (independent growth)")
plot( h, col=rgb(0,0,1,1/4), xlim=c(0,1),ylim=c(0,25))  # first histogram
plot( h1, col=rgb(1,0,0,1/4), xlim=c(0,1), add=T)  # second
plot( h, col=rgb(0,0,1,1/4), xlim=c(0,1),ylim=c(0,25),main="rpoB mutations (red = Beijing) (Gagneux 2006)")  # first histogram
plot( h, col=rgb(0,0,1,1/4), xlim=c(0,1),ylim=c(0,25),main="rpoB mutations (red = Beijing) \n (Gagneux 2006)")  # first histogram
plot( h, col=rgb(0,0,1,1/4), xlim=c(0,1),ylim=c(0,25),main="rpoB mutations (red = Beijing) \n (Gagneux 2006)",xlab = "Relative fitness (independent growth)")  # first histogram
plot( h1, col=rgb(1,0,0,1/4), xlim=c(0,1), add=T)  # second
pdf("gagn2006.pdf")
plot( h, col=rgb(0,0,1,1/4), xlim=c(0,1),ylim=c(0,25),main="rpoB mutations (red = Beijing) \n (Gagneux 2006)",xlab = "Relative fitness (independent growth)")  # first histogram
plot( h1, col=rgb(1,0,0,1/4), xlim=c(0,1), add=T)  # second
dev.off()
g
gg<-c(g,g1)
gg
gg<-append(g,g1)
gg
gg[1,]<-c(g[1,],g1[1,])
gg<-matrix(0,1,1)
gg[1,]<-c(g[1,],g1[1,])
gg<-c(g[1,],g1[1,])
gg
gg<-c(g[,1],g1[,1])
gg
g[,1]
dim(g)
dim(g1)
dim(gg)
length(gg)
gg<-cbind(c(g[,1],g1[,1]),c(g[,2],g1[,2])
gg<-cbind(c(g[,1],g1[,1]),c(g[,2],g1[,2]))
gg<-cbind(c(g[,1],g1[,1]),c(g[,2],g1[,2]))
gg
gg<-cbind(c(g[,1],g1[,1]),c(g[,2],g1[,2])); d2<-c()
for (i in 1:dim(gg)[1]){d2<-c(d2,matrix(1,1,gg[i,2])*gg[i,1])}
h2 <- hist(d2, breaks = seq(0,1,0.01),ylim=c(0,25),main="rpoB mutants, T85 (Beijing) (Gagneux, 2006)",xlab = "Relative fitness (competitive growth)")
h2 <- hist(d2, breaks = seq(0,1,0.01),ylim=c(0,25),main="rpoB mutants (Gagneux, 2006)",xlab = "Relative fitness (competitive growth)")
pdf("gagn2006_pool.pdf")
h2 <- hist(d2, breaks = seq(0,1,0.01),ylim=c(0,25),main="rpoB mutants \n (Gagneux, 2006)",xlab = "Relative fitness (competitive growth)")
dev.off()
dev.off()
dev.off()
h2 <- hist(d2, breaks = seq(0,1,0.01),ylim=c(0,25),main="rpoB mutants \n (Gagneux, 2006)",xlab = "Relative fitness (competitive growth)")
g<-read.csv("dist_mariam2004.csv"); d<-c()
setwd(home)
g<-read.csv("dist_mariam2004.csv"); d<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,2])*g[i,1])}
carrots <- data.frame(length = rnorm(100000, 6, 2))
cukes <- data.frame(length = rnorm(50000, 7, 2.5))
#Now, combine your two dataframes into one.  First make a new column in each.
carrots$veg <- 'carrot'
cukes$veg <- 'cuke'
#and combine into your new data frame vegLengths
vegLengths <- rbind(carrots, cukes)
head(vegLengths)
head(carrots)
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2])}
d
g
g<-read.csv("dist_mariam2004.csv"); d<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2])}
d
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))}
d1
g<-read.csv("dist_mariam2004.csv"); d<-c();d1<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))}
d1
bb<-cbind(d,d1)
head(bb)
bb<-cbind(d,d1); bb[,1]<-as.numeric(bb[,1])
head(bb)
bb<-d
head(bb)
bb<-d; bb$exp<-d1
head(bb)
bb<-as.data.frame(d); bb$exp<-d1
head(bb)
bb<-as.data.frame(d); bb$exp<-d1; colnames(bb)<-c("count","exp")
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity')
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.1)
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.05)
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
setwd(home)
g<-read.csv("dist_mariam2004.csv"); d<-c();d1<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))}
bb<-as.data.frame(d); bb$exp<-d1; colnames(bb)<-c("count","exp")
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
bb<-as.data.frame(d); bb$exp<-d1; colnames(bb)<-c("count","Experimental \n environment")
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))}
bb<-as.data.frame(d); bb$exp<-d1; colnames(bb)<-c("count","Experimental \n environment")
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
bb<-as.data.frame(d); bb$exp<-d1; colnames(bb)<-c("count","Experimental environment")
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))}
bb<-as.data.frame(d); bb$exp<-d1; colnames(bb)<-c("count","Experiment")
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
g<-read.csv("dist_mariam2004.csv"); d<-c();d1<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))}
bb<-as.data.frame(d); bb$exp<-d1; colnames(bb)<-c("count","Experiment")
ggplot(bb, aes(count, fill = exp)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
head(bb)
unique(bb[,"Experiment"])
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)+scale_x_discrete("Relative fitness")
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)+scale_x_discrete(xlim=c(0,1),"Relative fitness")
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)+scale_x_discrete(c(0,1),"Relative fitness")
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)+scale_x_discrete(xmax=1,"Relative fitness")
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)+scale_x_discrete(c("x",0,1),"Relative fitness")
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)+scale_x_discrete("Relative fitness")
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)+scale_x_continuous("Relative fitness")
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)+scale_x_continuous(c(0,1),"Relative fitness")
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)+scale_x_continuous(xlim=c(0,1),"Relative fitness")
ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)+scale_x_continuous("Relative fitness")
head(g)
4+11+2
g<-read.csv("dist_mariam2004.csv"); d<-c();d1<-c(); g[,3]<-g[,3]/17
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))}
bb<-as.data.frame(d); bb$exp<-d1; colnames(bb)<-c("count","Experiment")
p<-ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
p<-p+scale_x_continuous("Relative fitness")+scale_y_continuous("Frequency")
p
g<-read.csv("dist_mariam2004.csv"); d<-c();d1<-c(); g[,3]<-g[,3]
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))}
bb<-as.data.frame(d); bb$exp<-d1; colnames(bb)<-c("count","Experiment")
p<-ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
p<-p+scale_x_continuous("Relative fitness")+scale_y_continuous("Frequency")
p
p<-ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.5, aes(y = ..density..), position = 'identity',binwidth=0.01)
p
p<-ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.8, aes(y = ..density..), position = 'identity',binwidth=0.01)
p
p<-ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.8, aes(y = ..density..), position = 'identity')
p
p<-ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.8, aes(y = ..density..), position = 'identity',binwidth=0.01)
p
p<-ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.8, aes(y = ..density..), position = 'identity',binwidth=0.01)+ geom_density()
p<-p+scale_x_continuous("Relative fitness")+scale_y_continuous("Frequency")
p
p<-ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.8, aes(y = ..density..), position = 'identity',binwidth=0.01)+ geom_density(alpha=0.5)
p<-p+scale_x_continuous("Relative fitness")+scale_y_continuous("Frequency")
p
p
ggsave("mariam_pool.pdf")
p<-p+scale_x_continuous(lim=c(0,1),"Relative fitness")+scale_y_continuous("Frequency")
p
p<-p+scale_x_continuous(lim=c(0,1),"Relative fitness")+scale_y_continuous("Frequency")+main("rpoB mutants \n (Mariam 2004)")
p<-ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.8, aes(y = ..density..), position = 'identity',binwidth=0.01)+ geom_density(alpha=0.5)
p<-p+scale_x_continuous(lim=c(0,1),"Relative fitness")+scale_y_continuous("Frequency")+main("rpoB mutants \n (Mariam 2004)")
p
p<-p+scale_x_continuous(lim=c(0,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("rpoB mutants \n (Mariam 2004)")
p
p<-p+scale_x_continuous(lim=c(0,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("rpoB mutants (Harlingen) \n (Mariam 2004)")
p<-ggplot(bb, aes(count, fill = Experiment)) + geom_histogram(alpha = 0.8, aes(y = ..density..), position = 'identity',binwidth=0.01)+ geom_density(alpha=0.5)
p<-p+scale_x_continuous(lim=c(0,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("rpoB mutants (Harlingen) \n (Mariam 2004)")
p
setwd(plots)
ggsave("mariam_pool.pdf")
setwd(home)
g<-read.csv("rpob_all.csv")
head(g)
g<-read.csv("rpob_all.csv"); d1<-c();d2<-c();d3<-c();d4<-c();d5<-c();
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))
d2<-c(d2,matrix(g[i,1],1,g[i,3]))
d3<-c(d3,matrix(g[i,4],1,g[i,3]))
d4<-c(d4,matrix(g[i,5],1,g[i,3]))
d5<-c(d5,matrix(g[i,6],1,g[i,3]))}
g<-read.csv("rpob_all.csv"); d1<-c();d2<-c();d3<-c();d4<-c();d5<-c();d<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))
d2<-c(d2,matrix(g[i,1],1,g[i,3]))
d3<-c(d3,matrix(g[i,4],1,g[i,3]))
d4<-c(d4,matrix(g[i,5],1,g[i,3]))
d5<-c(d5,matrix(g[i,6],1,g[i,3]))}
g[i,3]
i
g[22,]
g[23,]
g<-read.csv("rpob_all.csv")[1:22,]; d1<-c();d2<-c();d3<-c();d4<-c();d5<-c();d<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))
d2<-c(d2,matrix(g[i,1],1,g[i,3]))
d3<-c(d3,matrix(g[i,4],1,g[i,3]))
d4<-c(d4,matrix(g[i,5],1,g[i,3]))
d5<-c(d5,matrix(g[i,6],1,g[i,3]))}
head(g)
bb<-as.data.frame(d); bb$exp<-d1;bb$paper<-d2;bb$rpoB<-d3;bb$strain<-d4;
head(bb)
g<-read.csv("rpob_all.csv")[1:22,]; d1<-c();d2<-c();d3<-c();d4<-c();d<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))
d2<-c(d2,matrix(g[i,4],1,g[i,3]))
d3<-c(d3,matrix(g[i,5],1,g[i,3]))
d4<-c(d4,matrix(g[i,6],1,g[i,3]))}
bb<-as.data.frame(d); bb$exp<-d1;bb$paper<-d2;bb$rpoB<-d3;bb$strain<-d4; colnames(bb)<-c("count","Experiment","Ref","")
bb
head(bb)
bb<-as.data.frame(d); bb$exp<-d1;bb$paper<-d2;bb$rpoB<-d3;bb$strain<-d4; colnames(bb)<-c("count","Experiment","Ref","rpoBmut","strain")
bb<-as.data.frame(d); bb$exp<-d1;bb$paper<-d2;bb$rpoB<-d3;bb$strain<-d4; colnames(bb)<-c("count","Experiment","Ref","rpoBmut","Strain")
ggplot(bb,aes(count,fill=Experiment))+geom_histogram(alpha=0.8)+geom_density(alpha=0.5)
ggplot(bb,aes(count,fill=Experiment))+geom_histogram(alpha=0.8,binwidth=0.01)+geom_density(alpha=0.5)
ggplot(bb,aes(count,fill=Experiment))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)+geom_density(alpha=0.5)
ggsave("all_rpoB_exp.pdf")
w<-which(bb[,"Experiment"]=="Independent")
p1<-ggplot(bb[w,],aes(count,fill=Ref))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)+geom_density(alpha=0.5)
p1<-p1+scale_x_continuous(lim=c(0,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants")
p2
p2<-ggplot(bb[w,],aes(count,fill=Ref))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)+geom_density(alpha=0.5)
p2<-p2+scale_x_continuous(lim=c(0,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants")
p2
p2<-p2+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants")
p2<-ggplot(bb[w,],aes(count,fill=Ref))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)+geom_density(alpha=0.5)
p2<-p2+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants")
p2
ggsave("all_rpoB_ref.pdf")
p2<-p2+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants, \n independent growth experiments")
p2<-ggplot(bb[w,],aes(count,fill=Ref))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)+geom_density(alpha=0.5)
p2<-p2+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants, \n independent growth experiments")
p2
w<-which(bb[,"Experiment"]=="Independent")
head(bb)
p2<-ggplot(bb[w,],aes(count,fill=rpoBmut))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)+geom_density(alpha=0.5)
p3<-ggplot(bb[w,],aes(count,fill=rpoBmut))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)+geom_density(alpha=0.5)
p3<-p3+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants")
p3
p3<-ggplot(bb[w,],aes(count,fill=rpoBmut))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)
p3<-p3+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants")
p3
p3<-ggplot(bb[w,],aes(count,fill=rpoBmut))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)
p3<-p3+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants, \n independent growth experiments")
p3
source('~/Documents/My Documents/Diagnostics/Natural history/genfun/data/distributions_data.R', echo=TRUE)
plot( h, col=rgb(0,0,1,1/4), xlim=c(0,1),ylim=c(0,25),main="rpoB mutations (red = Beijing) \n (Gagneux 2006)",xlab = "Relative fitness (competitive growth)")  # first histogram
plot( h1, col=rgb(1,0,0,1/4), xlim=c(0,1), add=T)  # second
h1 <- hist(d1, breaks = seq(0,1,0.01),ylim=c(0,25),main="rpoB mutants, T85 (Beijing) \n (Gagneux, 2006)",xlab = "Relative fitness (competitive growth)")
head(d1)
head(g1)
source('~/Documents/My Documents/Diagnostics/Natural history/genfun/data/distributions_data.R', echo=TRUE)
source('~/Documents/My Documents/Diagnostics/Natural history/genfun/generalised_function.R', echo=TRUE)
library(plyr); library(ggplot2);library(reshape2);library(deSolve);library(grid)
##*** Locations
home<-"~/Documents/My Documents/Diagnostics/Natural history/genfun/"
plots<-paste(home,"plots",sep="")
setwd(home)
##*** Code needed
# Loads functions for generalised mean function and simulation model that uses the generalised function
# Also 2 fitness level ode function, original Sourya model as a difference model and multiplots function
source("generalised_function.R")
##*** Setting up
# Number of discrete levels?
nfit = 10
# Matrices of distribution of fitness
M0 <- matrix(0,nfit,10)
rownames(M0)<-seq(1/nfit,1,1/nfit) # Currently relative fitness of 1 is upper limit
L0 <- matrix(0,nfit,10)
rownames(L0)<-seq(1/nfit,1,1/nfit)
#*** Baseline model - for "fitting" initial conditions
# Timestep (dt = 0.1) v important!
S<-sourya(3000,home, c(0,0.6,0.035),c(0,0,100,0))
iniv<-c(S$Ls[3001],S$Lr[3001],S$As[3001],S$Ar[3001],0,0)
Ls0=S$Ls[3001]; As0=S$As[3001]; N=1000000
# Timestep
dt = 0.01
#*** For "data" generation - ode model with 2 levels
parameters_var <- c(muL=0.02,muA=0.187,beta=7.36,phi=0.0015,p=0.14,omega=1,ks=0.05,kr=0.4,chi=0.33,eps=0.008,mu=0.02,f=0.6,propF=0.01)
times <- seq(0, 100, by = 1)
state <- c(U = N-Ls0-As0,Ls=Ls0,Lru=0,Lrf=0,As=As0,Aru=0,Arf=0,IAru=0,IArf=0) # Takes initial conditions from above baseline model
out <- data.frame(ode(y = state, times = times, func = twor_var, parms = parameters_var))
# additional output
out$meanf<-(out[, "Arf"]/(out[, "Aru"]+out[, "Arf"])) + 0.6*(out[, "Aru"]/(out[, "Aru"]+out[, "Arf"])); out$meanf[1]<-0.6
out$propF<-0.01; out$activeR<-out[,"Arf"]+out[,"Aru"]
#############********************************************** Testing
#*** Mean fitness function is, with mock numbers
X<-meanfit_vars(M0,L0,10,0,0.14,1,0,0,0,nfit,"orig",0.01)
# Produces output for next time step's mean fitness (to generate new number of transmissions) and updates next "column" or distribution of active (M) and latent (L)
X$meanfit
Sv<-sourya_funcf_mean_vars(100*(1/dt),home, c(0.008,0.6,0.35),iniv,M0,L0,"orig",0.01)
plot(Sv$meanf,ylim=c(0.5,1),type="l",col="blue")
points(seq(0,100*1/dt,1/dt),out$meanf,col="black") # Have to plot out against 10*time due to timestep of dt
legend(200,0.6,c("2 levels ode model","Generalised fit function"),c("blue","black"))
plot(Sv$"Ar",type="l",col="blue")
points(seq(0,100*1/dt,1/dt),out$activeR,col="black")
legend(100,150,c("2 levels ode model","Generalised fit function"),c("blue","black"))
Sv<-sourya_funcf_mean_vars(100*(1/dt),home, c(0.008,0.6,0.35),iniv,M0,L0,"det",0.01)
plot(Sv$meanf,ylim=c(0.5,1),type="l",col="blue")
points(seq(0,100*1/dt,1/dt),out$meanf,col="black") # Have to plot out against 10*time due to timestep of dt
legend(200,0.6,c("2 levels ode model","Generalised fit function"),c("blue","black"))
plot(Sv$"Ar",type="l",col="blue")
points(seq(0,100*1/dt,1/dt),out$activeR,col="black")
legend(100,150,c("2 levels ode model","Generalised fit function"),c("blue","black"))
legend(200,0.6,c("2 levels ode model","Generalised fit function"),c("black","blue"))
plot(Sv$meanf,ylim=c(0.5,1),type="l",col="blue")
points(seq(0,100*1/dt,1/dt),out$meanf,col="black") # Have to plot out against 10*time due to timestep of dt
legend(200,0.6,c("2 levels ode model","Generalised fit function"),c("black","blue"))
plot(Sv$"Ar",type="l",col="blue")
points(seq(0,100*1/dt,1/dt),out$activeR,col="black")
legend(100,150,c("2 levels ode model","Generalised fit function"),c("black","blue"))
plot(Sv$"Ar",type="l",col="blue",ylim=c(0,100))
points(seq(0,100*1/dt,1/dt),out$activeR,col="black")
plot(Sv$"Ar",type="l",col="blue",ylim=c(0,400))
points(seq(0,100*1/dt,1/dt),out$activeR,col="black")
source('~/Documents/My Documents/Diagnostics/Natural history/genfun/generalised_function.R', echo=TRUE)
Sv<-sourya_funcf_mean_vars(100*(1/dt),home, c(0.008,0.6,0.35),iniv,M0,L0,"det",0.01)
plot(Sv$meanf,ylim=c(0.5,1),type="l",col="blue")
points(seq(0,100*1/dt,1/dt),out$meanf,col="black") # Have to plot out against 10*time due to timestep of dt
legend(200,0.6,c("2 levels ode model","Generalised fit function"),c("black","blue"))
plot(Sv$"Ar",type="l",col="blue",ylim=c(0,400))
points(seq(0,100*1/dt,1/dt),out$activeR,col="black")
legend(100,150,c("2 levels ode model","Generalised fit function"),c("black","blue"))
plot(Sv$"Ar",type="l",col="blue",ylim=c(0,600))
points(seq(0,100*1/dt,1/dt),out$activeR,col="black")
legend(100,150,c("2 levels ode model","Generalised fit function"),c("black","blue"))
Sv<-sourya_funcf_mean_vars(100*(1/dt),home, c(0.008,0.6,0.35),iniv,M0,L0,"det",0.1)
plot(Sv$meanf,ylim=c(0.5,1),type="l",col="blue")
points(seq(0,100*1/dt,1/dt),out$meanf,col="black") # Have to plot out against 10*time due to timestep of dt
legend(200,0.6,c("2 levels ode model","Generalised fit function"),c("black","blue"))
setwd(home)
setwd(home)
g<-read.csv("dist_sander2002.csv"); d<-c();d1<-c(); g[,3]<-g[,3]
home<-"~/Documents/My Documents/Diagnostics/Natural history/genfun/data"
plots<-paste(home,"/plots",sep="")
setwd(home)
setwd(home)
g<-read.csv("dist_sander2002.csv"); d<-c();d1<-c(); g[,3]<-g[,3]
g<-read.csv("dist_sander2002.csv"); d<-c()
setwd(home)
g<-read.csv("dist_sander2002.csv"); d<-c()
g
g<-read.csv("dist_sander2002.csv"); d<-c()
g<-read.csv("dist_sander2002.csv"); d<-c()
setwd(home)
g<-read.csv("dist_sander2002.csv"); d<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,2])*g[i,1])}
setwd(plots)
h <- hist(d, breaks = seq(0,1,0.01),main="rpoB mutants, CDC1551 (Gagneux, 2006)",xlab = "Relative fitness (competitive growth)")
h <- hist(d, breaks = seq(0,1,0.01),main="ribosomal nucleic acids mutation, \n M. smegmatis (Sander, 2002)",xlab = "Relative fitness (competitive growth)")
h <- hist(d, breaks = seq(0,1,0.01),main="Ribosomal nucleic acids mutation, \n M. smegmatis (Sander, 2002)",xlab = "Relative fitness (competitive growth)")
pdf("data_sander2002.pdf")
h <- hist(d, breaks = seq(0,1,0.01),main="Ribosomal nucleic acids mutation, \n M. smegmatis (Sander, 2002)",xlab = "Relative fitness (competitive growth)")
dev.off()
getwd()
setwd(home)
g<-read.csv("all_smeg.csv")[1:22,]; d1<-c();d2<-c();d3<-c();d4<-c();d<-c()
head(g)
bb<-as.data.frame(d); bb$exp<-d1;bb$paper<-d2;bb$res<-d3;bb$mutation<-d4; colnames(bb)<-c("count","Experiment","Ref","Resistance","Mutation")
g<-read.csv("all_smeg.csv")[1:22,]; d1<-c();d2<-c();d3<-c();d4<-c();d<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))
d2<-c(d2,matrix(g[i,4],1,g[i,3]))
d3<-c(d3,matrix(g[i,5],1,g[i,3]))
d4<-c(d4,matrix(g[i,6],1,g[i,3]))}
bb<-as.data.frame(d); bb$exp<-d1;bb$paper<-d2;bb$res<-d3;bb$mutation<-d4; colnames(bb)<-c("count","Experiment","Ref","Resistance","Mutation")
dim(g)
g[22,]
g
g<-read.csv("all_smeg.csv")[1:16,]; d1<-c();d2<-c();d3<-c();d4<-c();d<-c()
for (i in 1:dim(g)[1]){d<-c(d,matrix(1,1,g[i,3])*g[i,2]);d1<-c(d1,matrix(g[i,1],1,g[i,3]))
d2<-c(d2,matrix(g[i,4],1,g[i,3]))
d3<-c(d3,matrix(g[i,5],1,g[i,3]))
d4<-c(d4,matrix(g[i,6],1,g[i,3]))}
bb<-as.data.frame(d); bb$exp<-d1;bb$paper<-d2;bb$res<-d3;bb$mutation<-d4; colnames(bb)<-c("count","Experiment","Ref","Resistance","Mutation")
p1<-ggplot(bb,aes(count,fill=Experiment))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)+geom_density(alpha=0.5)
p1<-p1+scale_x_continuous(lim=c(0,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants")
p1
ggsave("all_smeg_exp.pdf")
w<-which(bb[,"Experiment"]=="Independent")
p2<-ggplot(bb[w,],aes(count,fill=Ref))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)+geom_density(alpha=0.5)
p2<-p2+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants, \n independent growth experiments")
p2
p2<-ggplot(bb[w,],aes(count,fill=Ref))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)
p2<-p2+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All smegmatis data, \n independent growth experiments")
p2
ggsave("all_smeg_ref.pdf")
w<-which(bb[,"Experiment"]=="Independent")
p3<-ggplot(bb[w,],aes(count,fill=rpoBmut))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)
p3<-p3+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants, \n independent growth experiments")
p3
p3<-ggplot(bb[w,],aes(count,fill=Mutation))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)
p3<-p3+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All rpoB mutants, \n independent growth experiments")
p3
p3<-ggplot(bb[w,],aes(count,fill=Mutation))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)
p3<-p3+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All smegmatis data, \n independent growth experiments")
p3
ggsave("all_smeg_mut.pdf")
head(bb)
p3<-ggplot(bb,aes(count,fill=Resistance))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)
p3<-p3+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All smegmatis data, \n independent growth experiments")
p3
w<-which(bb[,"Experiment"]=="Independent")
p3<-ggplot(bb[w,],aes(count,fill=Resistance))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)
p3<-p3+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All smegmatis data, \n independent growth experiments")
p3
w<-which(bb[,"Experiment"]=="Competition")
p3<-ggplot(bb[w,],aes(count,fill=Resistance))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)
p3<-p3+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All smegmatis data, \n independent growth experiments")
p3
w<-which(bb[,"Experiment"]=="Competition")
p3<-ggplot(bb[w,],aes(count,fill=Resistance))+geom_histogram(alpha=0.8,position = 'identity',binwidth=0.01)
p3<-p3+scale_x_continuous(lim=c(0.25,1),"Relative fitness")+scale_y_continuous("Frequency")+ggtitle("All smegmatis data, \n competition experiments")
p3
ggsave("all_smeg_res_comp.pdf")
getwd()
source('~/Documents/My Documents/Diagnostics/Natural history/genfun/data/distributions_data.R', echo=TRUE)
